gather(`SC Facet`,`Self Concordance Score`,-c(Age,Gender,Education,Hours,Pay,Burnout,`Grit Facet`,`Grit Score`)) %>%
group_by(`Grit Facet`,`SC Facet`) %>%
nest() %>%
mutate(data = map(data,~scale(scale = F)),
lm = map(data,~lm(Burnout ~ Age+Gender+Education+Hours+Pay+`Grit Score`*`Self Concordance Score`,data = .)),
tidy = map(lm,broom::tidy)) %>%
unnest(tidy)
scores %>%
gather(`Grit Facet`,`Grit Score`,-c(Age,Gender,Education,Hours,Pay,External:RAI),-Burnout) %>%
gather(`SC Facet`,`Self Concordance Score`,-c(Age,Gender,Education,Hours,Pay,Burnout,`Grit Facet`,`Grit Score`)) %>%
group_by(`Grit Facet`,`SC Facet`) %>%
nest() %>%
mutate(lm = map(data,~lm(Burnout ~ Age+Gender+Education+Hours+Pay+scale(`Grit Score`)*scale(`Self Concordance Score`),data = .)),
tidy = map(lm,broom::tidy)) %>%
unnest(tidy)
scores %>%
gather(`Grit Facet`,`Grit Score`,-c(Age,Gender,Education,Hours,Pay,External:RAI),-Burnout) %>%
gather(`SC Facet`,`Self Concordance Score`,-c(Age,Gender,Education,Hours,Pay,Burnout,`Grit Facet`,`Grit Score`)) %>%
group_by(`Grit Facet`,`SC Facet`) %>%
nest() %>%
mutate(lm = map(data,~lm(Burnout ~ Age+Gender+Education+Hours+Pay+scale(`Grit Score`)*scale(`Self Concordance Score`),data = .)),
tidy = map(lm,broom::tidy)) %>%
unnest(tidy) %>%
select(-data,-lm) %>%
filter(term %in% c('scale(`Grit Score`)','scale(`Self Concordance Score`)','scale(`Grit Score`):scale(`Self Concordance Score`)'))
scores %>%
gather(`Grit Facet`,`Grit Score`,-c(Age,Gender,Education,Hours,Pay,External:RAI),-Burnout) %>%
gather(`SC Facet`,`Self Concordance Score`,-c(Age,Gender,Education,Hours,Pay,Burnout,`Grit Facet`,`Grit Score`)) %>%
group_by(`Grit Facet`,`SC Facet`) %>%
nest() %>%
mutate(lm = map(data,~lm(Burnout ~ Age+Gender+Education+Hours+Pay+scale(`Grit Score`)*scale(`Self Concordance Score`),data = .)),
tidy = map(lm,broom::tidy)) %>%
unnest(tidy) %>%
select(-data,-lm) %>%
filter(term %in% c('scale(`Grit Score`)','scale(`Self Concordance Score`)','scale(`Grit Score`):scale(`Self Concordance Score`)')) %>%
mutate(term = case_when(term = 'scale(`Grit Score`)' ~'Grit',
term = 'scale(`Self Concordance Score`)' ~ 'Self Concordance',
term = 'scale(`Grit Score`):scale(`Self Concordance Score`)' ~ 'Interaction'))
scores %>%
gather(`Grit Facet`,`Grit Score`,-c(Age,Gender,Education,Hours,Pay,External:RAI),-Burnout) %>%
gather(`SC Facet`,`Self Concordance Score`,-c(Age,Gender,Education,Hours,Pay,Burnout,`Grit Facet`,`Grit Score`)) %>%
group_by(`Grit Facet`,`SC Facet`) %>%
nest() %>%
mutate(lm = map(data,~lm(Burnout ~ Age+Gender+Education+Hours+Pay+scale(`Grit Score`)*scale(`Self Concordance Score`),data = .)),
tidy = map(lm,broom::tidy)) %>%
unnest(tidy) %>%
select(-data,-lm) %>%
filter(term %in% c('scale(`Grit Score`)','scale(`Self Concordance Score`)','scale(`Grit Score`):scale(`Self Concordance Score`)'))
scores %>%
gather(`Grit Facet`,`Grit Score`,-c(Age,Gender,Education,Hours,Pay,External:RAI),-Burnout) %>%
gather(`SC Facet`,`Self Concordance Score`,-c(Age,Gender,Education,Hours,Pay,Burnout,`Grit Facet`,`Grit Score`)) %>%
group_by(`Grit Facet`,`SC Facet`) %>%
nest() %>%
mutate(lm = map(data,~lm(Burnout ~ Age+Gender+Education+Hours+Pay+scale(`Grit Score`)*scale(`Self Concordance Score`),data = .)),
tidy = map(lm,broom::tidy)) %>%
unnest(tidy) %>%
select(-data,-lm) %>%
filter(term %in% c('scale(`Grit Score`)','scale(`Self Concordance Score`)','scale(`Grit Score`):scale(`Self Concordance Score`)')) %>%
mutate(term = case_when(term == 'scale(`Grit Score`)' ~'Grit',
term == 'scale(`Self Concordance Score`)' ~ 'Self Concordance',
term == 'scale(`Grit Score`):scale(`Self Concordance Score`)' ~ 'Interaction'))
lms = scores %>%
gather(`Grit Facet`,`Grit Score`,-c(Age,Gender,Education,Hours,Pay,External:RAI),-Burnout) %>%
gather(`SC Facet`,`Self Concordance Score`,-c(Age,Gender,Education,Hours,Pay,Burnout,`Grit Facet`,`Grit Score`)) %>%
group_by(`Grit Facet`,`SC Facet`) %>%
nest() %>%
mutate(lm = map(data,~lm(Burnout ~ Age+Gender+Education+Hours+Pay+scale(`Grit Score`)*scale(`Self Concordance Score`),data = .)),
tidy = map(lm,broom::tidy)) %>%
unnest(tidy) %>%
select(-data,-lm) %>%
filter(term %in% c('scale(`Grit Score`)','scale(`Self Concordance Score`)','scale(`Grit Score`):scale(`Self Concordance Score`)')) %>%
mutate(term = case_when(term == 'scale(`Grit Score`)' ~'Grit',
term == 'scale(`Self Concordance Score`)' ~ 'Self Concordance',
term == 'scale(`Grit Score`):scale(`Self Concordance Score`)' ~ 'Interaction'))
write_rds("Data/lms.rds")
write_rds(lms,"Data/lms.rds")
library(tidyverse)
lms
lms$term %>% unique()
lms$`SC Facet` %>% unique()
lms
read_rds("Data/lms.rds")
lms = read_rds("Data/lms.rds")
lms
lms
lms = read_rds("Data/lms.rds") %>%
mutate(`SC Facet` = ifelse(`SC Facet` == "RAI","Self-concordance",`SC Facet`)) %>%
rename(gf = `Grit Facet`,
sf = `SC Facet`)
lms %>% mutate(term = case_when())
lms
lms %>% mutate(term = case_when(term == "Grit" ~ gf,
term == "Self Concordance" ~ sf,
T ~ term))
lms = lms %>% mutate(term = case_when(term == "Grit" ~ gf,
term == "Self Concordance" ~ sf,
T ~ term))
lms
lms
lms
# Study 2 For presentation
library(tidyverse)
library(Ben)
library(lm.beta)
library(magrittr)
theme_sl = function(){theme_ang()+theme(text = element_text(family = "Helvetica"))}
penncol = function(){scale_color_manual(values = c("#990000","#011F5b"))}
pr = read_csv("Data/s2 210107-prolific.csv") %>% mutate(source = "Prolific")
sm = read_csv("Data/s2 210107-socialmedia.csv")
d = bind_rows(pr,sm)
dc = d %>% filter(DistributionChannel != "preview",
source != "test",
jobhours > 4,
jobstatus == 1,
jobdesc != "delete",
att1 == 3,
!is.na(jobdesc)) %>%
mutate(gender = ifelse(gender == 3, NA, gender))
vars = readxl::read_excel("Data/s2 codebook.xlsx")
keys = readxl::read_excel("Data/s2 codebook.xlsx",sheet = 2)
extract = function(var){vars %>% filter(!is.na(!!var)) %>% select(!!var)  %>% pull(!!var)}
# Alphas ####
dc %>%
# select(extract(quo(Grit))) %>%
# select(extract(quo(Passion))) %>%
# select(extract(quo(Perseverance))) %>%
# select(extract(quo(External))) %>%
# select(extract(quo(Introjected))) %>%
# select(extract(quo(Identified))) %>%
# select(extract(quo(Intrinsic))) %>%
select(extract(quo(RAI))) %>%
# select(extract(quo(BO))) %>%
psych::alpha(keys = keys$RAI)
alpha = numeric()
scores = data.frame(id = 1:97)
for(i in 1:ncol(vars)){
items = (vars[i] %>% pull(.))[!is.na((vars[i] %>% pull(.)))]
key = (keys[i])[!is.na(keys[i])]
a = dc %>% select(items) %>%
psych::alpha(x = ., keys = key)
alpha = append(alpha, a$total$std.alpha)
scores = cbind(scores,a$scores)
}
alpha %>% enframe %>%
mutate(Variable = colnames(vars)) %>%
rename(alpha = value) %>%
ggplot(aes(Variable,alpha))+
geom_col()+
geom_text(aes(label = numformat(alpha)),hjust=-.1)+
ylab(expression(alpha))+
geom_hline(yintercept=.6)+
coord_flip(ylim = c(.5,1))+
theme_sl()+
labs(title = "Reliability")
ggsave("Plots/Alpha.pdf",height = 4,width = 4)
names(scores) = c("id",colnames(vars))
scores = dc %>% select(age,gender,education,jobhours,jobpay,jobdesc,source) %>%
select_if(is.numeric) %>%
cbind(scores %>% select(-id)) %>%
rename(Burnout = BO,
Age = age,
Gender = gender,
Education = education,
Hours = jobhours,
Pay = jobpay
)
scores %>% select(Grit:Burnout) %>%
gather(factor_key = T) %>%
mutate(fam = case_when(key %in% c("Grit","Passion","Perseverance") ~ "Grit",
key %in% c("RAI","External","Introjected","Identified","Intrinsic") ~ "RAI",
key == "Burnout" ~ "Burnout")) %>%
ggplot(aes(value,fill = fam))+
geom_density(col = "white",alpha = .6)+
facet_wrap(~key)+
theme_sl()+
scale_fill_manual(values = c("#000000","#990000","#011F5b"))+
theme(legend.position = "none")
ggsave("Plots/Hist.pdf",height = 4,width = 4)
scores %>%
select(Grit:Burnout) %>%
HARcor() %T>%
write.clip()
# Regressions ####
m1 = scores %>%
select(Grit,RAI,Burnout) %>%
mutate(Grit = scale(Grit,scale = F),
RAI = scale(RAI,scale = F)) %>%
lm(Burnout ~ Grit+RAI,data = .)
m2 = scores %>%
select(Grit,RAI,Burnout) %>%
mutate(Grit = scale(Grit,scale = F),
RAI = scale(RAI,scale = F)) %>%
lm(Burnout ~ Grit*RAI,data = .)
m2 %>% lm.beta %>% summary
anova(m1,m2)
#install.packages("stargazer")
library(stargazer)
stargazer(m1,m2,type = "html") %>% write.clip
library(interactions)
interact_plot(model = lm(Burnout ~ Grit*RAI,data = scores),pred = Grit,modx = RAI,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
ggsave("Plots/2.3.pdf",width = 6,height = 4)
# Regressions Contorl ####
m0 = scores %>%
select(Burnout,Age,Gender,Education,Hours,Pay) %>%
lm(Burnout ~ .,data = .)
m1 = scores %>%
select(Burnout,Age,Gender,Education,Hours,Pay,Grit,RAI) %>%
mutate(Grit = scale(Grit,scale = F),
RAI = scale(RAI,scale = F)) %>%
lm(Burnout ~ .,data = .)
m2 = scores %>%
select(Burnout,Age,Gender,Education,Hours,Pay,Grit,RAI) %>%
mutate(Grit = scale(Grit,scale = F),
RAI = scale(RAI,scale = F)) %>%
lm(Burnout ~ Age+Gender+Education+Hours+Pay+Grit*RAI,data = .)
lms = scores %>%
gather(`Grit Facet`,`Grit Score`,-c(Age,Gender,Education,Hours,Pay,External:RAI),-Burnout) %>%
gather(`SC Facet`,`Self Concordance Score`,-c(Age,Gender,Education,Hours,Pay,Burnout,`Grit Facet`,`Grit Score`)) %>%
group_by(`Grit Facet`,`SC Facet`) %>%
nest() %>%
mutate(lm = map(data,~lm(Burnout ~ Age+Gender+Education+Hours+Pay+scale(`Grit Score`)*scale(`Self Concordance Score`),data = .)),
tidy = map(lm,broom::tidy)) %>%
unnest(tidy) %>%
select(-data,lm) %>%
filter(term %in% c('scale(`Grit Score`)','scale(`Self Concordance Score`)','scale(`Grit Score`):scale(`Self Concordance Score`)')) %>%
mutate(term = case_when(term == 'scale(`Grit Score`)' ~'Grit',
term == 'scale(`Self Concordance Score`)' ~ 'Self Concordance',
term == 'scale(`Grit Score`):scale(`Self Concordance Score`)' ~ 'Interaction'))
write_rds(lms,"Data/lms.rds")
library(tidyverse)
lms = read_rds("Data/lms.rds") %>%
mutate(`SC Facet` = ifelse(`SC Facet` == "RAI","Self-concordance",`SC Facet`)) %>%
rename(gf = `Grit Facet`,
sf = `SC Facet`)
lms = lms %>% mutate(term = case_when(term == "Grit" ~ gf,
term == "Self Concordance" ~ sf,
T ~ term)) %>% ungroup()
lms
lms %>% mutate(plot = map(lm,interact_plot))
?map
interact_plot(lms$lm[1])
lms$lm[1]
interact_plot()
?interact_plot()
interact_plot(lms$lm[1],"scale(`Grit Score`)")
interact_plot(lms$lm[1],"scale(`Grit Score`)",modx = "`Self Concordance Score`")
interact_plot(model = lms$lm[1],"scale(`Grit Score`)",modx = "`Self Concordance Score`",)
lms$lm[1]
interact_plot(model = "lm(Burnout~Grit*RAI+Age+Gender+Education+Hours+Pay,data=scores)",pred = Grit,modx = RAI,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*RAI+Age+Gender+Education+Hours+Pay",data=scores),pred = Grit,modx = RAI,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
write_rds(scores,"Data/scores.rds")
scores
scores
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
scores = read_rds("Data/lms.rds") %>% rename(RAI = "Self-concordance")
scores
scores = read_rds("Data/lms.rds") %>% rename(`Self-concordance` = RAI)
scores
scores %>% rename(`Self-concordance` = RAI)
score = scores %>% rename(`Self-concordance` = RAI)
lms = read_rds("Data/lms.rds") %>%
mutate(`SC Facet` = ifelse(`SC Facet` == "RAI","Self-concordance",`SC Facet`)) %>%
rename(gf = `Grit Facet`,
sf = `SC Facet`)
scores = read_rds("Data/lms.rds")
score = scores %>% rename(`Self-concordance` = RAI)
scores = read_rds("Data/lms.rds")
scores
scores
scores = read_rds("Data/scores.rds")
scores = scores %>% rename(`Self-concordance` = RAI)
renderPlot({
interact_plot(model = lm(glue::glue("Burnout~{input$gr}*`{input$sc}`+Age+Gender+Education+Hours+Pay"),data=scores),pred = input$gr,modx = input$sc,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
})
interact_plot
glue::glue("Burnout~{input$gr}*`{input$sc}`+Age+Gender+Education+Hours+Pay"
)
interact_plot(model = lm(glue::glue("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay"),data=scores),pred = input$gr,modx = input$sc,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = input$gr,modx = input$sc,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = input$gr,modx = input$sc,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = Grit,modx = `Self-concordance`,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores)
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = `Self-concordance`,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = "`Self-concordance`"",
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = "`Self-concordance`",
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = "`Self-concordance`",
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = `Self-concordance`
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = `Self-concordance`,
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = "Self-concordance",
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
lm("Burnout~Grit*Self-concordance+Age+Gender+Education+Hours+Pay",data=scores)
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = "Self-concordance",
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
interact_plot(model = lm("Burnout~Grit*`Self-concordance`+Age+Gender+Education+Hours+Pay",data=scores),pred = "Grit",modx = "`Self-concordance`",
plot.points = T,
colors = c("#990000","#000000","#011F5b"),vary.lty = F,jitter = T,point.alpha = .2,interval = T)+
theme_gray()+
theme_sl()
# Study 2 For presentation
library(tidyverse)
library(Ben)
library(lm.beta)
library(magrittr)
theme_sl = function(){theme_ang()+theme(text = element_text(family = "Helvetica"))}
penncol = function(){scale_color_manual(values = c("#990000","#011F5b"))}
pr = read_csv("Data/s2 210107-prolific.csv") %>% mutate(source = "Prolific")
sm = read_csv("Data/s2 210107-socialmedia.csv")
d = bind_rows(pr,sm)
dc = d %>% filter(DistributionChannel != "preview",
source != "test",
jobhours > 4,
jobstatus == 1,
jobdesc != "delete",
att1 == 3,
!is.na(jobdesc)) %>%
mutate(gender = ifelse(gender == 3, NA, gender))
dc
dc %>% select(g1:b5)
dc %>% select(g1:b5) %>% describe()
dc %>% select(g1:b5) %>% psych::describe()
dc %>% select(g1:b5)
dc %>% select(g1:b5) %>% gather(Item,Response)
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(Item %>% starts_with("g") ~ "Grit",
TRUE ~ Other))
dc %>% select(g1:b5) %>% psych::describe()
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(Item %>% starts_with("g") ~ "Grit",
TRUE ~ Other))
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Variable,"g") ~ "Grit",
TRUE ~ Other))
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
TRUE ~ Other))
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
TRUE ~ "Other"))
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout"))
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response))+geom_bar
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response))+geom_bar()
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response))+geom_bar()+facet_grid(~Variable)
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response))+geom_bar()+facet_grid(Item~Variable)
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+geom_bar()+facet_grid(Item~Variable)
dc %>% select(g1:b5) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+geom_bar()+facet_wrap(Item)+
theme_sl()+
theme(legend.position = "none")
dc %>% select(g1:b5,-att1) %>% gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+geom_bar()+facet_wrap(Item)+
theme_sl()+
theme(legend.position = "none")
dc %>% select(g1:b5,-att1)
dc %>% select(g1:b5,-att1) %>%
gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout"))
dc %>% select(g1:b5,-att1) %>%
gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+geom_bar()+facet_wrap(Item)+
theme_sl()+
theme(legend.position = "none")
dc %>% select(g1:b5,-att1) %>%
gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout"))
dc %>% select(g1:b5,-att1) %>%
gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+geom_bar()+facet_wrap(~Item)+
theme_sl()+
theme(legend.position = "none")
dc %>% select(g1:b5,-att1) %>%
gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+geom_bar()+facet_wrap(~Item)+
theme_sl()+
theme(legend.position = "none")+
scale_fill_manual(values = c("#000000","#990000","#011F5b"))+
ggsave("Plots/Item distributions.pdf",height = 4,width = 4)
dc %>% select(g1:b5,-att1) %>%
gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+geom_bar()+facet_wrap(~Item)+
theme_sl()+
theme(legend.position = "none")+
scale_fill_manual(values = c("#000000","#990000","#011F5b"))
dc %>% select(g1:b5,-att1) %>%
gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+geom_bar()+facet_wrap(~Item)+
theme_sl()+
theme(legend.position = "none")+
scale_fill_manual(values = c("#000000","#990000","#011F5b"))
dc %>% select(g1:b5,-att1) %>%
gather(Item,Response) %>%
mutate(Variable = case_when(str_detect(Item,"g") ~ "Grit",
str_detect(Item,"m") ~ "Self-concordance",
str_detect(Item,"b") ~ "Burnout")) %>%
ggplot(aes(Response, fill = Variable))+
geom_bar(alpha = .6)+
facet_wrap(~Item)+
theme_sl()+
theme(legend.position = "none")+
scale_fill_manual(values = c("#000000","#990000","#011F5b"))
ggsave("Plots/Item distributions.pdf",height = 6,width = 12)
